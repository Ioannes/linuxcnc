#
# Joypad_xz.hal 
#
# This file is an example .hal for adding joystick jogging using a hal_input device.
# This was tested with a Logitech F310 and a lathe.
# This file contains the HAL to connect the right joystick jog xz proportional to the joystick.
# This file should be used in conjunction with joypad_jog_speed.hal which connects buttons to select maximum jog speed.
#
# Add to postgui_call_list.hal using the lines:
#       "source joypad_jog_speed.hal".
#       "source joypad_xz.hal".
#

#
# Use analog joystick to modify the jog-speed.
# Use the right joystick to control lathe xz for easier one hand operation.
# NOTICE: This uses lathe orientation for the joystick of xz (works similar to default keyboard jog left/right,up/down.) 
# Connect joint and axis pins so jogging works before and after homing.
#

#
# To avoid any startup problems and machine turning off transients, mux/sample-hold the analog signals to avoid sending a jog command.
#
loadrt mux2 names=mux2_x,mux2_z

addf mux2_x servo-thread
addf mux2_z servo-thread

#
# Use a mux as a sample hold so analog jogs don't change when machine is off.
#
net machine-is-on <= halui.machine.is-on => mux2_x.sel mux2_z.sel  # Control the mux with the machine on/off state.

net jog-x-pre <= input.0.abs-rz-position => mux2_x.in1
net jog-z-pre <= input.0.abs-z-position  => mux2_z.in1
net jog-x-analog <= mux2_x.out => mux2_x.in0 halui.joint.0.analog halui.axis.x.analog 
net jog-z-analog <= mux2_z.out => mux2_z.in0 halui.joint.1.analog halui.axis.z.analog 


